#!/usr/bin/env ruby

require 'gli'
require 'decking'

Decking::Parser.config_file File.expand_path(File.dirname(__FILE__)) + '/../spec/resources/decking-container-tests.yaml'

module Decking::CLI
  extend GLI::App
  config_file '.deckingrc'
  program_desc "Manage a cluster of docker containers"

  flag [:cluster], :default_value => "unknown"
  switch [:f, :force], :default_value => false

  command :start do |c|
    c.action do |global_options,options,args|
      Decking::Parser.parse global_options[:cluster]
      Decking::Parser.config.containers.map { |name, config| Decking::Container.add config }
      unless global_options[:force]
        Decking::Container.create_all
      else
        Decking::Container.create_all!
      end
      Decking::Container.start_all
    end
  end

  command :watchlogs do |c|
    c.action do |global_options,options,args|
      Decking::Parser.parse global_options[:cluster]
      Decking::Parser.config.containers.map { |name, config| Decking::Container.add config }
      Decking::Container.tail_all_logs
    end
  end
end

exit Decking::CLI.run(ARGV)

